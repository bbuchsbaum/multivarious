[{"path":"https://bbuchsbaum.github.io/multivarious/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 multivarious authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to the multivarious Package","text":"multivarious package provides generic functions basic implementations dimensionality reduction high-dimensional data. vignette focuses two main classes package, projector bi_projector, demonstrates use project function projecting new data onto lower-dimensional subspace.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"projector-and-bi-projector-classes","dir":"Articles","previous_headings":"","what":"Projector and Bi-projector Classes","title":"Introduction to the multivarious Package","text":"projector bi_projector two core classes multivarious package. represent linear transformations high-dimensional space lower-dimensional space.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"projector","dir":"Articles","previous_headings":"","what":"Projector","title":"Introduction to the multivarious Package","text":"projector instance maps matrix \\(N\\)-dimensional space \\(d\\)-dimensional space, \\(d\\) may less \\(N\\). projection matrix, \\(V\\), necessarily orthogonal. class can used various dimensionality reduction techniques like PCA, LDA, etc.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"bi-projector","dir":"Articles","previous_headings":"","what":"Bi-projector","title":"Introduction to the multivarious Package","text":"bi_projector instance offers two-way mapping samples (rows) scores variables (columns) components. allows projecting \\(D\\)-dimensional input space \\(d\\)-dimensional subspace, projecting \\(n\\)-dimensional variable space \\(d\\)-dimensional component space. singular value decomposition (SVD) canonical example two-way mapping.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"the-project-function","dir":"Articles","previous_headings":"","what":"The Project Function","title":"Introduction to the multivarious Package","text":"project function generic function takes model fit (typically object class bi_projector class implements project method) new observations. projects observations onto subspace defined model. enables transformation new data lower-dimensional space original data. Mathematically, projection consists following: \\[ X \\approx USV^T \\] \\[ \\text{projected_data} = \\text{new_data} \\cdot V \\]","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Introduction to the multivarious Package","text":"example, demonstrate create bi_projector object using results SVD project new data onto subspace original data. multivarious package, bi_projector class allows project new variables subspace defined model. project_vars function generic function operates object class implementing project_vars method, bi_projector object. function projects one variables onto subspace, can computed biorthogonal decomposition like Singular Value Decomposition (SVD). Remember, given original data matrix \\(X\\), SVD \\(X\\) can written : \\[ X \\approx USV^T \\] \\(U\\) contains left singular vectors (scores), \\(S\\) diagonal matrix containing singular values, \\(V^T\\) contains right singular vectors (components). new variables (columns) want project subspace original data, can use project_vars function.","code":"# Load the multivarious package library(multivarious) #>  #> Attaching package: 'multivarious' #> The following object is masked from 'package:stats': #>  #>     residuals #> The following object is masked from 'package:base': #>  #>     truncate  # Create a synthetic dataset set.seed(42) X <- matrix(rnorm(1020), 10, 20) #> Warning in matrix(rnorm(1020), 10, 20): data length differs from size of #> matrix: [1020 != 10 x 20]  # Perform SVD on the dataset svdfit <- svd(X)  # Create a bi_projector object p <- bi_projector(svdfit$v, s = svdfit$u %*% diag(svdfit$d), sdev = svdfit$d)  # Generate new data to project onto the same subspace as the original data new_data <- matrix(rnorm(5 * 20), 5, 20)  projected_data <- project(p, new_data) print(projected_data) #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #> [1,] -0.58913714  0.6865705  0.4102210  0.6438856  0.1402522 -0.6761381 #> [2,] -0.26952900 -0.3642198 -0.7173707  0.2154867  0.6124832 -1.0128207 #> [3,] -0.05130657  0.6229558 -1.1896199 -0.9898505 -1.2961081 -2.8089945 #> [4,]  2.09310369  2.3419124 -1.1773441  0.3953684  0.2574287 -1.4958182 #> [5,]  0.65287270 -1.4746880 -1.4929464  0.2257442 -0.1187262  1.0901138 #>             [,7]         [,8]       [,9]      [,10] #> [1,]  0.68371650  0.258370781 -1.3508220 -1.4870010 #> [2,] -0.94059882  0.241747174 -0.9027479  0.7274886 #> [3,]  0.93458865 -0.563849694 -0.7676557  0.0302713 #> [4,] -0.04816029 -0.004896937 -1.4666963 -0.4516368 #> [5,]  0.56153130 -0.160593061 -1.1317360 -0.5067634"},{"path":"https://bbuchsbaum.github.io/multivarious/articles/Introduction.html","id":"projecting-new-variables-onto-the-subspace","dir":"Articles","previous_headings":"","what":"Projecting New Variables onto the Subspace","title":"Introduction to the multivarious Package","text":"Let’s say new data matrix new_data number rows original data. project new variables subspace, can compute: = U^T result matrix vector projected variables subspace. ’s example can use svd_wrapper function multivarious package Iris dataset compute SVD project new variables subspace. First, let’s load Iris dataset compute SVD using svd_wrapper function: Now, let’s assume new data matrix new_data number rows original data. project new variables subspace, can use project_vars function: example demonstrates compute SVD using svd_wrapper function project new variables subspace defined SVD using project_vars function.","code":"# Load iris dataset and select the first four columns data(iris) X <- iris[, 1:4]  # Compute SVD using the base method and 3 components fit <- svd_wrapper(X, ncomp = 3, preproc = center(), method = \"base\") # Define new_data new_data <- rnorm(nrow(iris))  # Project the new variables into the subspace projected_vars <- project_vars(fit, new_data)"},{"path":"https://bbuchsbaum.github.io/multivarious/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bradley Buchsbaum. Author, maintainer.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buchsbaum B (2023). multivarious: Extensible Data Structures Multivariate Analysis. R package version 0.0.0.9000, https://bbuchsbaum.github.io/multivarious/.","code":"@Manual{,   title = {multivarious: Extensible Data Structures for Multivariate Analysis},   author = {Bradley Buchsbaum},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://bbuchsbaum.github.io/multivarious/}, }"},{"path":"https://bbuchsbaum.github.io/multivarious/index.html","id":"multivarious","dir":"","previous_headings":"","what":"Extensible Data Structures for Multivariate Analysis","title":"Extensible Data Structures for Multivariate Analysis","text":"preliminary … package intended provide basic abstractions default implementations basic computational infrastructure multivariate component-based modeling principal components analysis. main idea model multivariate decompositions involving projections input data space lower dimensional component space. idea encapsulated projector class project function. Support two-way mapping (row projection column projection) provided derived class bi-projector. Generic functions common operations included: project mapping input space (usually) reduced-dimensional output space partial_project mapping subset input space output space project_vars mapping new variables (“supplementary variables”) output space reconstruct reconstructing input data low-dimensional representation residuals extracting residuals fit n components.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extensible Data Structures for Multivariate Analysis","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"bbuchsbaum/multivarious\")"},{"path":"https://bbuchsbaum.github.io/multivarious/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Extensible Data Structures for Multivariate Analysis","text":"basic example shows solve common problem:","code":"library(multivarious) #>  #> Attaching package: 'multivarious' #> The following object is masked from 'package:stats': #>  #>     residuals #> The following object is masked from 'package:base': #>  #>     truncate ## basic example code"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/add_node.html","id":null,"dir":"Reference","previous_headings":"","what":"add a pre-processing stage — add_node","title":"add a pre-processing stage — add_node","text":"add pre-processing stage","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/add_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add a pre-processing stage — add_node","text":"","code":"add_node(x, step, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/add_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add a pre-processing stage — add_node","text":"x processing pipeline step pre-processing step add ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply rotation — apply_rotation","title":"Apply rotation — apply_rotation","text":"Apply specified rotation fitted model","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply rotation — apply_rotation","text":"","code":"apply_rotation(x, rotation_matrix, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply rotation — apply_rotation","text":"x model object, possibly created using pca() function. ncomp number components rotate. type type rotation apply.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply rotation — apply_rotation","text":"modified object updated components scores applying specified rotation.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"apply a pre-processing transform — apply_transform","title":"apply a pre-processing transform — apply_transform","text":"apply pre-processing transform","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply a pre-processing transform — apply_transform","text":"","code":"apply_transform(x, X, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/apply_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply a pre-processing transform — apply_transform","text":"x pre_processor X data matrix colind column indices ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a bi_projector instance — bi_projector","title":"Construct a bi_projector instance — bi_projector","text":"bi_projector offers two-way mapping samples (rows) scores variables (columns) components. Thus, one can project D-dimensional input space d-dimensional subspace. one can project (project_vars) n-dimensional variable space d-dimensional component space. singular value decomposition canonical example two-way mapping.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a bi_projector instance — bi_projector","text":"","code":"bi_projector(v, s, sdev, preproc = prep(pass()), classes = NULL, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a bi_projector instance — bi_projector","text":"v matrix coefficients dimensions nrow(v) ncol(v) (number columns = number components) s score matrix sdev standard deviations score matrix preproc (optional) pre-processing pipeline, default prep(pass()) classes (optional) character vector specifying class attributes object, default NULL ... Extra arguments stored projector object.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a bi_projector instance — bi_projector","text":"bi_projector object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a bi_projector instance — bi_projector","text":"","code":"X <- matrix(rnorm(1020), 10, 20) #> Warning: data length differs from size of matrix: [1020 != 10 x 20] svdfit <- svd(X)  p <- bi_projector(svdfit$v, s = svdfit$u %% diag(svdfit$d), sdev=svdfit$d)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector_union.html","id":null,"dir":"Reference","previous_headings":"","what":"A Union of Concatenated bi_projector Fits — bi_projector_union","title":"A Union of Concatenated bi_projector Fits — bi_projector_union","text":"function combines set bi_projector fits single bi_projector instance. new instance's weights associated scores obtained concatenating weights scores input fits.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Union of Concatenated bi_projector Fits — bi_projector_union","text":"","code":"bi_projector_union(fits, outer_block_indices = NULL)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Union of Concatenated bi_projector Fits — bi_projector_union","text":"fits list bi_projector instances row space. instances combined create new bi_projector instance. outer_block_indices optional list indices outer blocks. provided, function compute indices based dimensions input fits.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector_union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Union of Concatenated bi_projector Fits — bi_projector_union","text":"new bi_projector instance concatenated weights, scores, properties input bi_projector instances.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bi_projector_union.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Union of Concatenated bi_projector Fits — bi_projector_union","text":"","code":"X1 <- matrix(rnorm(5*5), 5, 5) X2 <- matrix(rnorm(5*5), 5, 5)  bpu <- bi_projector_union(list(pca(X1), pca(X2)))"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/block_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"get block_indices — block_indices","title":"get block_indices — block_indices","text":"extract list indices associated block multiblock object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/block_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get block_indices — block_indices","text":"","code":"block_indices(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/block_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get block_indices — block_indices","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/block_lengths.html","id":null,"dir":"Reference","previous_headings":"","what":"get block_lengths — block_lengths","title":"get block_lengths — block_lengths","text":"extract lengths block multiblock object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/block_lengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get block_lengths — block_lengths","text":"","code":"block_lengths(x)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/block_lengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get block_lengths — block_lengths","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap Resampling for Multivariate Models — bootstrap","title":"Bootstrap Resampling for Multivariate Models — bootstrap","text":"Perform bootstrap resampling multivariate model estimate variability components scores. Perform bootstrap resampling Principal Component Analysis (PCA) estimate component score variability.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap Resampling for Multivariate Models — bootstrap","text":"","code":"bootstrap(x, nboot, ...)  # S3 method for pca bootstrap(x, nboot = 100, k = ncomp(x), ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap Resampling for Multivariate Models — bootstrap","text":"x fitted PCA model object. nboot number bootstrap resamples (default: 100). ... Additional arguments passed specific model implementation bootstrap. k number components bootstrap (default: components fitted PCA model).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap Resampling for Multivariate Models — bootstrap","text":"list containing bootstrap resampled components scores model. list containing bootstrap z-scores loadings (zboot_loadings) scores (zboot_scores).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bootstrap Resampling for Multivariate Models — bootstrap","text":"Fisher, Aaron, Brian Caffo, Brian Schwartz, Vadim Zipunnikov. 2016. \"Fast, Exact Bootstrap Principal Component Analysis P > 1 Million.\" Journal American Statistical Association 111 (514): 846-60.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap Resampling for Multivariate Models — bootstrap","text":"","code":"X <- matrix(rnorm(10*100), 10, 100) x = pca(X, ncomp=9) bootstrap_results <- bootstrap.pca(x) #> Error in bootstrap.pca(x): could not find function \"bootstrap.pca\""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/center.html","id":null,"dir":"Reference","previous_headings":"","what":"center a data matrix — center","title":"center a data matrix — center","text":"remove mean columns matrix","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"center a data matrix — center","text":"","code":"center(preproc = prepper(), cmeans = NULL)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"center a data matrix — center","text":"preproc pre-processing pipeline cmeans optional vector precomputed column means","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.discriminant_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a k-NN classifier for a discriminant projector — classifier.discriminant_projector","title":"Create a k-NN classifier for a discriminant projector — classifier.discriminant_projector","text":"Constructs k-NN classifier discriminant projector, option use subset components.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.discriminant_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a k-NN classifier for a discriminant projector — classifier.discriminant_projector","text":"","code":"# S3 method for discriminant_projector classifier(x, colind = NULL, knn = 1, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.discriminant_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a k-NN classifier for a discriminant projector — classifier.discriminant_projector","text":"x discriminant projector object colind optional vector specifying column indices components use prediction (NULL default) knn number nearest neighbors consider k-NN classifier (default 1) ... extra arguments","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.discriminant_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a k-NN classifier for a discriminant projector — classifier.discriminant_projector","text":"classifier object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Classifier — classifier","title":"Construct a Classifier — classifier","text":"Create classifier given model object (e.g., projector). classifier can generate predictions new data points. Constructs classifier multiblock bi-projector model can generate predictions new data points.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Classifier — classifier","text":"","code":"classifier(x, colind, ...)  # S3 method for multiblock_biprojector classifier(   x,   colind = NULL,   labels,   new_data = NULL,   block = NULL,   knn = 1,   ... )  # S3 method for projector classifier(x, colind = NULL, labels, new_data, knn = 1, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Classifier — classifier","text":"x fitted multiblock bi-projector model object. colind optional vector column indices used prediction (default: NULL). ... Additional arguments passed specific model implementation classifier. labels labels associated rows projected data (see new_data) new_data reference data associated labels projected subspace (required). block optional block index prediction (default: NULL). knn number nearest neighbors use classifying new point.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Classifier — classifier","text":"classifier function can used make predictions new data points. multiblock classifier object.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/classifier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Classifier — classifier","text":"","code":"# Assuming `x` is a fitted multiblock bi-projector model object, and `labels` are class labels # for the training data, you can create a classifier as follows: my_classifier <- classifier.multiblock_biprojector(x, labels = labels) #> Error in classifier.multiblock_biprojector(x, labels = labels): could not find function \"classifier.multiblock_biprojector\"  # You can then use this classifier to make predictions for new data points # (assuming `new_data` is a data matrix of new observations): predictions <- predict(my_classifier, new_data) #> Error in eval(expr, envir, enclos): object 'my_classifier' not found  data(iris) X <- iris[,1:4] pcres <- pca(as.matrix(X),2) cfier <- classifier(pcres, labels=iris[,5], new_data=as.matrix(iris[,1:4])) p <- predict(cfier, as.matrix(iris[,1:4]))"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/coef.cross_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Project new data using a cross_projector object — coef.cross_projector","title":"Project new data using a cross_projector object — coef.cross_projector","text":"function projects new data using cross_projector object derived two-way projection X Y blocks.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/coef.cross_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project new data using a cross_projector object — coef.cross_projector","text":"","code":"# S3 method for cross_projector coef(x, source = c(\"X\", \"Y\"), ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/coef.cross_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project new data using a cross_projector object — coef.cross_projector","text":"x cross_projector object source source data (X Y block), either \"X\" \"Y\" ... additional arguments passed function new_data new data projected","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/coef.cross_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project new data using a cross_projector object — coef.cross_projector","text":"projected matrix using specified cross_projector object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/coef.cross_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project new data using a cross_projector object — coef.cross_projector","text":"","code":"# Assuming 'canfit' is a cross_projector object created using the cross_projector function new_X <- scale(matrix(rnorm(5 * 5), 5, 5)) projected_X <- project(canfit, new_X, source = \"X\") #> Error in eval(expr, envir, enclos): object 'canfit' not found  new_Y <- scale(matrix(rnorm(5 * 5), 5, 5)) projected_Y <- project(canfit, new_Y, source = \"Y\") #> Error in eval(expr, envir, enclos): object 'canfit' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/colscale.html","id":null,"dir":"Reference","previous_headings":"","what":"scale a data matrix — colscale","title":"scale a data matrix — colscale","text":"normalize column scale factor.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/colscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scale a data matrix — colscale","text":"","code":"colscale(preproc = prepper(), type = c(\"unit\", \"z\", \"weights\"), weights = NULL)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/colscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scale a data matrix — colscale","text":"preproc pre-processing pipeline type kind scaling, unit norm, z-scoring, precomputed weights weights optional precomputed weights","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/components.html","id":null,"dir":"Reference","previous_headings":"","what":"get the components — components","title":"get the components — components","text":"Extract component matrix fit.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the components — components","text":"","code":"components(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the components — components","text":"x model fit ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Compose Two Projectors — compose_projector","title":"Compose Two Projectors — compose_projector","text":"Combine two projector models single projector sequentially applying first projector second projector.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compose Two Projectors — compose_projector","text":"","code":"compose_projector(x, y, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compose Two Projectors — compose_projector","text":"x fitted model object (e.g., projector) fit dataset applied first composition. y second fitted model object (e.g., projector) fit dataset applied first projector. ... Additional arguments passed specific model implementation compose_projector.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compose Two Projectors — compose_projector","text":"new projector object representing composed projector, can used project data onto combined subspace.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Projector Composition — compose_projectors","title":"Projector Composition — compose_projectors","text":"Compose sequence projector objects forward order. function allows composition multiple projectors, applying sequentially input data.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Projector Composition — compose_projectors","text":"","code":"compose_projectors(...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Projector Composition — compose_projectors","text":"... sequence projector objects composed.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Projector Composition — compose_projectors","text":"composed_projector object extends function class, allowing composed projectors applied input data.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/compose_projectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Projector Composition — compose_projectors","text":"","code":"# Create two PCA projectors and compose them X <- matrix(rnorm(20*20), 20, 20) pca1 <- pca(X, ncomp=10) X2 <- scores(pca1) pca2 <- pca(X2, ncomp=4)  # Compose the PCA projectors cproj <- compose_projectors(pca1, pca2)  # Ensure the output of the composed projectors has the expected dimensions stopifnot(ncol(cproj(X)) == 4) # Check that the composed projectors work as expected all.equal(project(cproj, X), cproj(X)) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/concat_pre_processors.html","id":null,"dir":"Reference","previous_headings":"","what":"bind together blockwise pre-processors — concat_pre_processors","title":"bind together blockwise pre-processors — concat_pre_processors","text":"concatenate sequence pre-processors, previously applied block data.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/concat_pre_processors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bind together blockwise pre-processors — concat_pre_processors","text":"","code":"concat_pre_processors(preprocs, block_indices)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/concat_pre_processors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bind together blockwise pre-processors — concat_pre_processors","text":"preprocs list initialized pre-processor objects block_indices list block indices vector list contains global indices variables.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/concat_pre_processors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"bind together blockwise pre-processors — concat_pre_processors","text":"","code":"p1 <- center() |> prep() p2 <- center() |> prep()  x1 <- rbind(1:10, 2:11) x2 <- rbind(1:10, 2:11)  p1a <- init_transform(p1,x1) p2a <- init_transform(p2,x2)  clist <- concat_pre_processors(list(p1,p2), list(1:10, 11:20)) t1 <- apply_transform(clist, cbind(x1,x2))  t2 <- apply_transform(clist, cbind(x1,x2[,1:5]), colind=1:15)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/convert_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer data from one input domain to another via common latent space — convert_domain","title":"Transfer data from one input domain to another via common latent space — convert_domain","text":"Convert data representations multiblock decomposition/alignment projecting input data onto common latent space reconstructing target domain.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/convert_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer data from one input domain to another via common latent space — convert_domain","text":"","code":"convert_domain(x, new_data, i, j, comp, rowind, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/convert_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer data from one input domain to another via common latent space — convert_domain","text":"x model fit, typically object class implements transfer method new_data data transfer, number rows source data block index source data block j index destination data block comp vector component indices use reconstruction rowind Optional set row indices transfer (default: rows) colind Optional set column indices transfer (default: columns) ... Additional arguments passed underlying convert_domain method","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/convert_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transfer data from one input domain to another via common latent space — convert_domain","text":"matrix data frame representing transferred data target domain","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/cross_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-way (cross) projection to latent components — cross_projector","title":"Two-way (cross) projection to latent components — cross_projector","text":"projector reduces two blocks data, X Y, yielding pair weights component. structure can used, example, store weights derived canonical correlation analysis.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/cross_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-way (cross) projection to latent components — cross_projector","text":"","code":"cross_projector(   vx,   vy,   preproc_x = prep(pass()),   preproc_y = prep(pass()),   ...,   classes = NULL )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/cross_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-way (cross) projection to latent components — cross_projector","text":"vx X coefficients vy Y coefficients preproc_x X pre-processor preproc_y Y pre-processor ... extra parameters results store classes additional class names","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/cross_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-way (cross) projection to latent components — cross_projector","text":"cross_projector object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/cross_projector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two-way (cross) projection to latent components — cross_projector","text":"class extends projector therefore basic operations project, shape, reprocess, coef work, default, assumed X block primary. access Y block operations, additional argument source must supplied relevant functions, e.g., coef(fit, source = \"Y\")","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/cross_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-way (cross) projection to latent components — cross_projector","text":"","code":"# Create two scaled matrices X and Y X <- scale(matrix(rnorm(10 * 5), 10, 5)) Y <- scale(matrix(rnorm(10 * 5), 10, 5))  # Perform canonical correlation analysis on X and Y cres <- cancor(X, Y) sx <- X %*% cres$xcoef sy <- Y %*% cres$ycoef  # Create a cross_projector object using the canonical correlation analysis results canfit <- cross_projector(cres$xcoef, cres$ycoef, cor = cres$cor,                           sx = sx, sy = sy, classes = \"cancor\")"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/discriminant_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Discriminant Projector — discriminant_projector","title":"Construct a Discriminant Projector — discriminant_projector","text":"discriminant_projector instance extends bi_projector projection maximizes class separation. can useful dimensionality reduction techniques take class labels account, Linear Discriminant Analysis (LDA).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/discriminant_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Discriminant Projector — discriminant_projector","text":"","code":"discriminant_projector(   v,   s,   sdev,   preproc = prep(pass()),   labels,   classes = NULL,   ... )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/discriminant_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Discriminant Projector — discriminant_projector","text":"v matrix coefficients dimensions nrow(v) ncol(v) (number columns = number components) s score matrix sdev standard deviations score matrix preproc (optional) pre-processing pipeline, default prep(pass()) labels factor character vector class labels corresponding rows score matrix s. classes (optional) character vector specifying class attributes object, default NULL ... Extra arguments stored projector object.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/discriminant_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a Discriminant Projector — discriminant_projector","text":"discriminant_projector object.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/discriminant_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a Discriminant Projector — discriminant_projector","text":"","code":"# Simulate data and labels set.seed(123) X <- matrix(rnorm(100 * 10), 100, 10) labels <- factor(rep(1:2, each = 50))  # Perform LDA and create a discriminant projector library(MASS) lda_fit <- lda(X, labels)  dp <- discriminant_projector(lda_fit$scaling, s = lda_fit$scores, sdev = lda_fit$svd, labels = labels) #> Error in discriminant_projector(lda_fit$scaling, s = lda_fit$scores, sdev = lda_fit$svd,     labels = labels): `length(sdev)` must be equal to NULL."},{"path":"https://bbuchsbaum.github.io/multivarious/reference/fresh.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a fresh pre-processing node cleared of any cached data — fresh","title":"Get a fresh pre-processing node cleared of any cached data — fresh","text":"Get fresh pre-processing node cleared cached data","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/fresh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a fresh pre-processing node cleared of any cached data — fresh","text":"","code":"fresh(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/fresh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a fresh pre-processing node cleared of any cached data — fresh","text":"x processing pipeline ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/group_means.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute column-wise mean in X for each factor level of Y — group_means","title":"Compute column-wise mean in X for each factor level of Y — group_means","text":"function computes group means factor level Y provided data matrix X.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/group_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute column-wise mean in X for each factor level of Y — group_means","text":"","code":"group_means(Y, X)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/group_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute column-wise mean in X for each factor level of Y — group_means","text":"Y vector labels compute means disjoint sets X data matrix compute means","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/group_means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute column-wise mean in X for each factor level of Y — group_means","text":"matrix row names corresponding factor levels Y column-wise means factor level","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/group_means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute column-wise mean in X for each factor level of Y — group_means","text":"","code":"# Example data X <- matrix(rnorm(50), 10, 5) Y <- factor(rep(1:2, each = 5))  # Compute group means gm <- group_means(Y, X)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/init_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize a transform — init_transform","title":"initialize a transform — init_transform","text":"initialize transform","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/init_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize a transform — init_transform","text":"","code":"init_transform(x, X, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/init_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialize a transform — init_transform","text":"x pre_processor X data matrix","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/inverse_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse of the Component Matrix — inverse_projection","title":"Inverse of the Component Matrix — inverse_projection","text":"Return inverse projection matrix, can used map back data space. component matrix orthogonal, inverse projection transpose component matrix.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/inverse_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse of the Component Matrix — inverse_projection","text":"","code":"inverse_projection(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/inverse_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse of the Component Matrix — inverse_projection","text":"x model fit. ... Extra arguments.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/inverse_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse of the Component Matrix — inverse_projection","text":"inverse projection matrix.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/is_orthogonal.html","id":null,"dir":"Reference","previous_headings":"","what":"is it orthogonal — is_orthogonal","title":"is it orthogonal — is_orthogonal","text":"test whether components orthogonal","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/is_orthogonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is it orthogonal — is_orthogonal","text":"","code":"is_orthogonal(x)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/is_orthogonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is it orthogonal — is_orthogonal","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_biprojector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Multiblock Bi-Projector — multiblock_biprojector","title":"Create a Multiblock Bi-Projector — multiblock_biprojector","text":"Constructs multiblock bi-projector using given component matrix (v), score matrix (s), singular values (sdev), preprocessing function, list block indices. allows projection multiblock data, block represents different set variables features, two-way mapping samples scores variables components.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_biprojector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Multiblock Bi-Projector — multiblock_biprojector","text":"","code":"multiblock_biprojector(   v,   s,   sdev,   preproc = prep(pass()),   ...,   block_indices,   classes = NULL )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_biprojector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Multiblock Bi-Projector — multiblock_biprojector","text":"v matrix components dimensions nrow(v) ncol(v) (number columns = number components). s matrix scores. sdev numeric vector singular values. preproc pre-processing function data (default pass-prep(pass())). ... Extra arguments. block_indices list numeric vectors specifying indices data block. classes (optional) character vector specifying class attributes object, default NULL.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_biprojector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Multiblock Bi-Projector — multiblock_biprojector","text":"multiblock_biprojector object.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Multiblock Projector — multiblock_projector","title":"Create a Multiblock Projector — multiblock_projector","text":"Constructs multiblock projector using given component matrix (v), preprocessing function, list block indices. allows projection multiblock data, block represents different set variables features.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Multiblock Projector — multiblock_projector","text":"","code":"multiblock_projector(   v,   preproc = prep(pass()),   ...,   block_indices,   classes = NULL )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Multiblock Projector — multiblock_projector","text":"v matrix components dimensions nrow(v) ncol(v) (number columns = number components). preproc pre-processing function data (default pass-prep(pass())). ... Extra arguments. block_indices list numeric vectors specifying indices data block. classes (optional) character vector specifying class attributes object, default NULL.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Multiblock Projector — multiblock_projector","text":"multiblock_projector object.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/multiblock_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Multiblock Projector — multiblock_projector","text":"","code":"# Generate some example data X1 <- matrix(rnorm(10 * 5), 10, 5) X2 <- matrix(rnorm(10 * 5), 10, 5) X <- cbind(X1, X2)  # Compute PCA on the combined data pc <- pca(X, ncomp = 8)  # Create a multiblock projector using PCA components and block indices mb_proj <- multiblock_projector(pc$v, block_indices = list(1:5, 6:10))  # Project the multiblock data using the multiblock projector mb_scores <- project(mb_proj, X)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nblocks.html","id":null,"dir":"Reference","previous_headings":"","what":"get the number of blocks — nblocks","title":"get the number of blocks — nblocks","text":"number data blocks multiblock element","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nblocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the number of blocks — nblocks","text":"","code":"nblocks(x)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nblocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the number of blocks — nblocks","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/ncomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of components — ncomp","title":"Get the number of components — ncomp","text":"function returns total number components fitted model.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/ncomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of components — ncomp","text":"","code":"ncomp(x)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/ncomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of components — ncomp","text":"x fitted model object.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/ncomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of components — ncomp","text":"number components fitted model.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/ncomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of components — ncomp","text":"","code":"# Example using the svd_wrapper function data(iris) X <- iris[, 1:4] fit <- svd_wrapper(X, ncomp = 3, preproc = center(), method = \"base\") ncomp(fit) # Should return 3 #> [1] 3"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/new_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new k-NN classifier for a model fit — new_classifier","title":"Create a new k-NN classifier for a model fit — new_classifier","text":"Constructs new k-NN classifier based model fit corresponding scores matrix, option use subset components.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/new_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new k-NN classifier for a model fit — new_classifier","text":"","code":"new_classifier(x, labels, scores, colind = NULL, knn = 1, classes = NULL, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/new_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new k-NN classifier for a model fit — new_classifier","text":"x model fit labels vector class labels corresponding data points scores matrix scores used classification colind optional vector specifying column indices components use prediction (NULL default) knn number nearest neighbors consider k-NN classifier (default 1) classes additional S3 classes assign classifier object ... extra arguments","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/new_classifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new k-NN classifier for a model fit — new_classifier","text":"classifier object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nystrom_embedding.html","id":null,"dir":"Reference","previous_headings":"","what":"Nystrom method for out-of-sample embedding — nystrom_embedding","title":"Nystrom method for out-of-sample embedding — nystrom_embedding","text":"Approximate embedding new data point using Nystrom method, particularly useful large datasets data-dependent embedding spaces, multidimensional scaling (MDS).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nystrom_embedding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nystrom method for out-of-sample embedding — nystrom_embedding","text":"","code":"nystrom_embedding(   new_data,   landmark_data,   kernel_function,   eigenvectors,   eigenvalues,   ... )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nystrom_embedding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nystrom method for out-of-sample embedding — nystrom_embedding","text":"new_data matrix data frame containing new data points projected. landmark_data matrix data frame containing landmark data points used approximation. kernel_function function used compute kernel matrix (e.g., distance function MDS). eigenvectors matrix containing eigenvectors obtained eigendecomposition kernel matrix landmark points. eigenvalues vector containing eigenvalues obtained eigendecomposition kernel matrix landmark points. ... Additional arguments passed kernel_function.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/nystrom_embedding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nystrom method for out-of-sample embedding — nystrom_embedding","text":"matrix containing approximate embedding new_data data-dependent space.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_inverse_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Partial Inverse Projection of a Columnwise Subset of Component Matrix — partial_inverse_projection","title":"Partial Inverse Projection of a Columnwise Subset of Component Matrix — partial_inverse_projection","text":"Compute inverse projection columnwise subset component matrix (e.g., sub-block). Even full component matrix orthogonal, guarantee partial component matrix orthogonal.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_inverse_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partial Inverse Projection of a Columnwise Subset of Component Matrix — partial_inverse_projection","text":"","code":"partial_inverse_projection(x, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_inverse_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partial Inverse Projection of a Columnwise Subset of Component Matrix — partial_inverse_projection","text":"x fitted model object, projector, fit dataset. colind numeric vector specifying column indices component matrix consider partial inverse projection. ... Additional arguments passed specific model implementation partial_inverse_projection.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_inverse_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partial Inverse Projection of a Columnwise Subset of Component Matrix — partial_inverse_projection","text":"matrix representing partial inverse projection.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Partially project a new sample onto subspace — partial_project","title":"Partially project a new sample onto subspace — partial_project","text":"Project selected subset column indices onto subspace. function allows projection new data onto lower-dimensional space using subset variables, specified column indices.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partially project a new sample onto subspace — partial_project","text":"","code":"partial_project(x, new_data, colind)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partially project a new sample onto subspace — partial_project","text":"x model fit, typically object class bi_projector class implements partial_project method new_data matrix vector new observations number columns original data. Rows represent observations columns represent variables colind numeric vector column indices select projection matrix. indices correspond variables used partial projection","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partially project a new sample onto subspace — partial_project","text":"matrix vector partially projected observations, rows represent observations columns represent lower-dimensional space","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partially project a new sample onto subspace — partial_project","text":"","code":"# Example with the bi_projector class X <- matrix(rnorm(10*20), 10, 20) svdfit <- svd(X) p <- bi_projector(svdfit$v, s = svdfit$u %*% diag(svdfit$d), sdev=svdfit$d)  # Partially project new_data onto the same subspace as the original data using only the first 10 variables new_data <- matrix(rnorm(5*20), 5, 20) colind <- 1:10 partially_projected_data <- partial_project(p, new_data, colind) #> Error in chk::check_dim(new_data, ncol, length(colind)): `ncol(new_data)` must be equal to 10L. #> Use `rlang::last_error()$y` to show the object compared to."},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a partial projector — partial_projector","title":"Construct a partial projector — partial_projector","text":"Create new projector instance restricted subset input columns. function allows generation new projection object focuses specified columns, enabling projection data using limited set variables.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a partial projector — partial_projector","text":"","code":"partial_projector(x, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a partial projector — partial_projector","text":"x original projector instance, typically object class bi_projector class implements partial_projector method colind numeric vector column indices select projection matrix. indices correspond variables used partial projector ... Additional arguments passed underlying partial_projector method","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a partial projector — partial_projector","text":"new projector instance, class original object, restricted specified subset input columns","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a partial projector — partial_projector","text":"","code":"# Example with the bi_projector class X <- matrix(rnorm(10*20), 10, 20) svdfit <- svd(X) p <- bi_projector(svdfit$v, s = svdfit$u %*% diag(svdfit$d), sdev=svdfit$d)  # Create a partial projector using only the first 10 variables colind <- 1:10 partial_p <- partial_projector(p, colind)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.projector.html","id":null,"dir":"Reference","previous_headings":"","what":"construct a partial_projector from a projector instance — partial_projector.projector","title":"construct a partial_projector from a projector instance — partial_projector.projector","text":"construct partial_projector projector instance","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct a partial_projector from a projector instance — partial_projector.projector","text":"","code":"# S3 method for projector partial_projector(x, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/partial_projector.projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"construct a partial_projector from a projector instance — partial_projector.projector","text":"","code":"X <- matrix(rnorm(10*10), 10, 10) pfit <- pca(X, ncomp=9) proj <- project(pfit, X)  pp <- partial_projector(pfit, 1:5)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pass.html","id":null,"dir":"Reference","previous_headings":"","what":"a no-op pre-processing step — pass","title":"a no-op pre-processing step — pass","text":"pass simply passes data chain","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a no-op pre-processing step — pass","text":"","code":"pass(preproc = prepper())"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a no-op pre-processing step — pass","text":"preproc pre-processing pipeline","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Components Analysis (PCA) — pca","title":"Principal Components Analysis (PCA) — pca","text":"Compute directions maximal variance data matrix using Singular Value Decomposition (SVD).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Components Analysis (PCA) — pca","text":"","code":"pca(   X,   ncomp = min(dim(X)),   preproc = center(),   method = c(\"fast\", \"base\", \"irlba\", \"propack\", \"rsvd\", \"svds\"),   ... )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Components Analysis (PCA) — pca","text":"X data matrix. ncomp number requested components estimate (default minimum dimension data matrix). preproc pre-processing function apply data matrix (default centering). method SVD method use, passed svd_wrapper (default \"fast\"). ... Extra arguments send svd_wrapper.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Components Analysis (PCA) — pca","text":"bi_projector object containing PCA results.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal Components Analysis (PCA) — pca","text":"","code":"data(iris) X <- as.matrix(iris[, 1:4]) res <- pca(X, ncomp = 4) tres <- truncate(res, 3)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/perm_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation Confidence Intervals — perm_ci","title":"Permutation Confidence Intervals — perm_ci","text":"Estimate confidence intervals model parameters using permutation testing.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/perm_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation Confidence Intervals — perm_ci","text":"","code":"perm_ci(x, X, nperm, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/perm_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation Confidence Intervals — perm_ci","text":"x model fit object. X original data matrix used fit model. nperm number permutations perform confidence interval estimation. ... Additional arguments passed specific model implementation perm_ci.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/perm_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation Confidence Intervals — perm_ci","text":"list containing estimated lower upper bounds confidence intervals model parameters.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/predict.classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"predict with a classifier object — predict.classifier","title":"predict with a classifier object — predict.classifier","text":"predict classifier object","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/predict.classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"predict with a classifier object — predict.classifier","text":"","code":"# S3 method for classifier predict(   object,   new_data,   ncomp = NULL,   colind = NULL,   metric = c(\"cosine\", \"euclidean\"),   ... )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/predict.classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"predict with a classifier object — predict.classifier","text":"object model fit new_data new data predict ncomp number components use colind column indices select projection matrix metric similarity metric (\"euclidean\" \"cosine\") ... additional arguments projection function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prep.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare a dataset by applying a pre-processing pipeline — prep","title":"prepare a dataset by applying a pre-processing pipeline — prep","text":"prepare dataset applying pre-processing pipeline","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare a dataset by applying a pre-processing pipeline — prep","text":"","code":"prep(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare a dataset by applying a pre-processing pipeline — prep","text":"x pipeline ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prep_node.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare a new node and add to pipeline — prep_node","title":"prepare a new node and add to pipeline — prep_node","text":"prepare new node add pipeline","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prep_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare a new node and add to pipeline — prep_node","text":"","code":"prep_node(pipeline, name, create, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prep_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare a new node and add to pipeline — prep_node","text":"pipeline pre-processing pipeline name name step add create creation function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prepper.html","id":null,"dir":"Reference","previous_headings":"","what":"construct a new pre-processing pipeline — prepper","title":"construct a new pre-processing pipeline — prepper","text":"construct new pre-processing pipeline","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prepper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct a new pre-processing pipeline — prepper","text":"","code":"prepper()"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prinang.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute principal angles for a set of subspaces — prinang","title":"Compute principal angles for a set of subspaces — prinang","text":"function calculates principal angles subspaces derived list bi_projector instances.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prinang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute principal angles for a set of subspaces — prinang","text":"","code":"prinang(fits)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prinang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute principal angles for a set of subspaces — prinang","text":"fits list bi_projector instances","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prinang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute principal angles for a set of subspaces — prinang","text":"numeric vector principal angles length equal minimum dimension input subspaces","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/prinang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute principal angles for a set of subspaces — prinang","text":"","code":"# Assuming 'fit1', 'fit2', and 'fit3' are bi_projector objects created using the svd_wrapper function fits_list <- list(fit1, fit2, fit3) #> Error in eval(expr, envir, enclos): object 'fit1' not found principal_angles <- prinang(fits_list) #> Error in eval(expr, envir, enclos): object 'fits_list' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.bi_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print S3 Method for bi_projector Class — print.bi_projector","title":"Pretty Print S3 Method for bi_projector Class — print.bi_projector","text":"Pretty Print S3 Method bi_projector Class","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.bi_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print S3 Method for bi_projector Class — print.bi_projector","text":"","code":"# S3 method for bi_projector print(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.bi_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print S3 Method for bi_projector Class — print.bi_projector","text":"x bi_projector object ... Additional arguments passed print function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.bi_projector_union.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print S3 Method for bi_projector_union Class — print.bi_projector_union","title":"Pretty Print S3 Method for bi_projector_union Class — print.bi_projector_union","text":"Pretty Print S3 Method bi_projector_union Class","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.bi_projector_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print S3 Method for bi_projector_union Class — print.bi_projector_union","text":"","code":"# S3 method for bi_projector_union print(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.bi_projector_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print S3 Method for bi_projector_union Class — print.bi_projector_union","text":"x bi_projector_union object ... Additional arguments passed print function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print Method for classifier Objects — print.classifier","title":"Pretty Print Method for classifier Objects — print.classifier","text":"Display human-readable summary classifier object, including information k-NN classifier, model fit, dimensions scores matrix.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print Method for classifier Objects — print.classifier","text":"","code":"# S3 method for classifier print(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print Method for classifier Objects — print.classifier","text":"x classifier object. ... Additional arguments passed print().","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.composed_projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print Method for composed_projector Objects — print.composed_projector","title":"Pretty Print Method for composed_projector Objects — print.composed_projector","text":"Display human-readable summary composed_projector object, including information number order projectors.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.composed_projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print Method for composed_projector Objects — print.composed_projector","text":"","code":"# S3 method for composed_projector print(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.composed_projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print Method for composed_projector Objects — print.composed_projector","text":"x composed_projector object. ... Additional arguments passed print().","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.composed_projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty Print Method for composed_projector Objects — print.composed_projector","text":"","code":"# Create two PCA projectors and compose them X <- matrix(rnorm(20*20), 20, 20) pca1 <- pca(X, ncomp=10) X2 <- scores(pca1) pca2 <- pca(X2, ncomp=4) cproj <- compose_projectors(pca1, pca2) print(cproj) #> Composed projector object: #>   Number of projectors:  1  #>   Projector order: #> Error in unclass(x)[[i]]: object of type 'closure' is not subsettable"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.multiblock_biprojector.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print Method for multiblock_biprojector Objects — print.multiblock_biprojector","title":"Pretty Print Method for multiblock_biprojector Objects — print.multiblock_biprojector","text":"Display human-readable summary multiblock_biprojector object, including information dimensions projection matrix, pre-processing pipeline, block indices.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.multiblock_biprojector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print Method for multiblock_biprojector Objects — print.multiblock_biprojector","text":"","code":"# S3 method for multiblock_biprojector print(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.multiblock_biprojector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print Method for multiblock_biprojector Objects — print.multiblock_biprojector","text":"x multiblock_biprojector object. ... Additional arguments passed print().","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.multiblock_biprojector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty Print Method for multiblock_biprojector Objects — print.multiblock_biprojector","text":"","code":"# Generate some example data X1 <- matrix(rnorm(10 * 5), 10, 5) X2 <- matrix(rnorm(10 * 5), 10, 5) X <- cbind(X1, X2) # Compute PCA on the combined data pc <- pca(X, ncomp = 8) # Create a multiblock bi-projector using PCA components and block indices mb_biproj <- multiblock_biprojector(pc$v, s = pc$u %*% diag(pc$d), sdev = pc$d, block_indices = list(1:5, 6:10)) #> Error in pc$u %*% diag(pc$d): non-conformable arguments # Pretty print the multiblock bi-projector object print(mb_biproj) #> Error in eval(expr, envir, enclos): object 'mb_biproj' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print Method for projector Objects — print.projector","title":"Pretty Print Method for projector Objects — print.projector","text":"Display human-readable summary projector object, including information dimensions projection matrix pre-processing pipeline.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print Method for projector Objects — print.projector","text":"","code":"# S3 method for projector print(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print Method for projector Objects — print.projector","text":"x projector object. ... Additional arguments passed print().","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/print.projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty Print Method for projector Objects — print.projector","text":"","code":"X <- matrix(rnorm(10*10), 10, 10) svdfit <- svd(X) p <- projector(svdfit$v) print(p) #> projector object: #>   Projection matrix dimensions:  10 x 10"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project.html","id":null,"dir":"Reference","previous_headings":"","what":"New sample projection — project","title":"New sample projection — project","text":"Project one samples onto subspace. function takes model fit new observations, projects onto subspace defined model. allows transformation new data lower-dimensional space original data.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New sample projection — project","text":"","code":"project(x, new_data, ...)  # S3 method for cross_projector project(x, new_data, source = c(\"X\", \"Y\"), ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"New sample projection — project","text":"x model fit, typically object class bi_projector class implements project method new_data matrix vector new observations number columns original data. Rows represent observations columns represent variables ... Extra arguments passed specific project method object's class source source data (X Y block)","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"New sample projection — project","text":"matrix vector projected observations, rows represent observations columns represent lower-dimensional space","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New sample projection — project","text":"","code":"# Example with the bi_projector class X <- matrix(rnorm(1020), 10, 20) #> Warning: data length differs from size of matrix: [1020 != 10 x 20] svdfit <- svd(X) p <- bi_projector(svdfit$v, s = svdfit$u %% diag(svdfit$d), sdev=svdfit$d)  # Project new_data onto the same subspace as the original data new_data <- matrix(rnorm(5*20), 5, 20) projected_data <- project(p, new_data)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Project a single ","title":"Project a single ","text":"observations concatenated \"blocks\", may useful project one block set. function facilitates projection specific block data onto subspace. convenience method multi-block fits equivalent \"partial projection\" column indices associated given block.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project a single ","text":"","code":"project_block(x, new_data, block, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project a single ","text":"x model fit, typically object class implements project_block method new_data matrix vector new observation(s) number columns original data block integer representing block ID select block projection matrix. ID corresponds specific block data projected ... Additional arguments passed underlying project_block method","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project a single ","text":"matrix vector projected data specified block","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project a single ","text":"","code":"# Example with a custom class that implements a project_block method # Assume that MyModel is a class that implements a project_block method # Fit the model and project the data for the first block mymodel_fit <- MyModel(...) #> Error in MyModel(...): could not find function \"MyModel\" new_data <- ... #> Error in eval(expr, envir, enclos): '...' used in an incorrect context projected_data <- project_block(mymodel_fit, new_data, block = 1) #> Error in eval(expr, envir, enclos): object 'mymodel_fit' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Project one or more variables onto a subspace — project_vars","title":"Project one or more variables onto a subspace — project_vars","text":"function projects one variables onto subspace. often called supplementary variable projection can computed biorthogonal decomposition, Singular Value Decomposition (SVD).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project one or more variables onto a subspace — project_vars","text":"","code":"project_vars(x, new_data, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project one or more variables onto a subspace — project_vars","text":"x model fit, typically object class implements project_vars method new_data matrix vector new observation(s) number rows original data ... Additional arguments passed underlying project_vars method","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project one or more variables onto a subspace — project_vars","text":"matrix vector projected variables subspace","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/project_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project one or more variables onto a subspace — project_vars","text":"","code":"# Example with a custom class that implements a project_vars method # Assume that MyModel is a class that implements a project_vars method # Fit the model and project the variables mymodel_fit <- MyModel(...) #> Error in MyModel(...): could not find function \"MyModel\" new_data <- ... #> Error in eval(expr, envir, enclos): '...' used in an incorrect context projected_vars <- project_vars(mymodel_fit, new_data) #> Error in eval(expr, envir, enclos): object 'mymodel_fit' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/projector.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a projector instance — projector","title":"Construct a projector instance — projector","text":"projector maps matrix N-dimensional space d-dimensional space, d may less N. projection matrix, v, necessarily orthogonal. function constructs projector instance can used various dimensionality reduction techniques like PCA, LDA, etc.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a projector instance — projector","text":"","code":"projector(v, preproc = prep(pass()), ..., classes = NULL)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/projector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a projector instance — projector","text":"v matrix coefficients dimensions nrow(v) ncol(v) (number columns = number components) preproc prepped pre-processing object. Default -processing pass() preprocessor. ... Extra arguments stored projector object. classes Additional class information used creating subtypes projector. Default NULL.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/projector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a projector instance — projector","text":"instance type projector.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a projector instance — projector","text":"","code":"X <- matrix(rnorm(10*10), 10, 10) svdfit <- svd(X) p <- projector(svdfit$v) proj <- project(p, X)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reconstruct.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct the data — reconstruct","title":"Reconstruct the data — reconstruct","text":"Reconstruct data set (possibly) low-rank representation. can useful analyzing impact dimensionality reduction visualizing approximations original data.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reconstruct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct the data — reconstruct","text":"","code":"reconstruct(x, comp, rowind, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reconstruct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct the data — reconstruct","text":"x model fit, typically object class implements reconstruct method comp vector component indices use reconstruction rowind row indices reconstruct (optional). provided, rows used. colind column indices reconstruct (optional). provided, columns used. ... Additional arguments passed underlying reconstruct method","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reconstruct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct the data — reconstruct","text":"reconstructed data set based selected components, rows, columns","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/refit.html","id":null,"dir":"Reference","previous_headings":"","what":"refit a model — refit","title":"refit a model — refit","text":"refit model given new data new parameter(s)","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/refit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"refit a model — refit","text":"","code":"refit(x, new_data, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/refit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"refit a model — refit","text":"x original model fit object new_data new data process ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/regress.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-output linear regression — regress","title":"Multi-output linear regression — regress","text":"Fit multivariate regression model matrix basis functions, X, response matrix Y. goal find projection matrix can used mapping reconstruction.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/regress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-output linear regression — regress","text":"","code":"regress(   X,   Y,   preproc = NULL,   method = c(\"lm\", \"enet\", \"mridge\", \"pls\"),   intercept = FALSE,   lambda = 0.001,   alpha = 0,   ncomp = ceiling(ncol(X)/2),   ... )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/regress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-output linear regression — regress","text":"X set independent (basis) variables Y response matrix preproc pre-processor (currently unused) method regression method: lm, enet, mridge, pls intercept whether include intercept term lambda ridge shrinkage parameter (methods mridge enet) alpha elastic net mixing parameter method enet ncomp number PLS components method pls ... extra arguments sent underlying fitting function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/regress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-output linear regression — regress","text":"bi-projector type regress","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/regress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-output linear regression — regress","text":"","code":"# Generate synthetic data Y <- matrix(rnorm(100 * 10), 10, 100) X <- matrix(rnorm(10 * 9), 10, 9) # Fit regression models and reconstruct the response matrix r_lm <- regress(X, Y, intercept = FALSE, method = \"lm\") recon_lm <- reconstruct(r_lm) r_mridge <- regress(X, Y, intercept = TRUE, method = \"mridge\", lambda = 0.001) recon_mridge <- reconstruct(r_mridge) r_enet <- regress(X, Y, intercept = TRUE, method = \"enet\", lambda = 0.001, alpha = 0.5) recon_enet <- reconstruct(r_enet) r_pls <- regress(X, Y, intercept = TRUE, method = \"pls\", ncomp = 5) recon_pls <- reconstruct(r_pls)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"apply pre-processing parameters to a new data matrix — reprocess","title":"apply pre-processing parameters to a new data matrix — reprocess","text":"Given new dataset, process way original data processed (e.g. centering, scaling, etc.)","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply pre-processing parameters to a new data matrix — reprocess","text":"","code":"reprocess(x, new_data, colind, ...)  # S3 method for cross_projector reprocess(x, new_data, colind = NULL, source = c(\"X\", \"Y\"), ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply pre-processing parameters to a new data matrix — reprocess","text":"x model fit object new_data new data process colind column indices new data ... extra args source source data (X Y block)","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain residuals of a component model fit — residuals","title":"Obtain residuals of a component model fit — residuals","text":"Calculate residuals model removing effect first ncomp components. function useful assess quality fit identify patterns captured model.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain residuals of a component model fit — residuals","text":"","code":"residuals(x, ncomp, xorig, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain residuals of a component model fit — residuals","text":"x model fit object. ncomp number components factor calculating residuals. xorig original data matrix (X) used fit model. ... Additional arguments passed method.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain residuals of a component model fit — residuals","text":"matrix residuals, dimensions original data matrix.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain residuals of a component model fit — residuals","text":"","code":"# Assume you have a fitted model 'model_fit' and the original data matrix 'data_matrix' # Calculate residuals after removing the first 2 components: res <- residuals(model_fit, ncomp = 2, xorig = data_matrix) #> Error in eval(expr, envir, enclos): object 'model_fit' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reverse_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"reverse a pre-processing transform — reverse_transform","title":"reverse a pre-processing transform — reverse_transform","text":"reverse pre-processing transform","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reverse_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reverse a pre-processing transform — reverse_transform","text":"","code":"reverse_transform(x, X, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/reverse_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reverse a pre-processing transform — reverse_transform","text":"x pre_processor X data matrix colind column indices ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rf_classifier.html","id":null,"dir":"Reference","previous_headings":"","what":"construct a random forest wrapper classifier — rf_classifier","title":"construct a random forest wrapper classifier — rf_classifier","text":"Given model object (e.g. projector construct random forest classifier can generate predictions new data points.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rf_classifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"construct a random forest wrapper classifier — rf_classifier","text":"","code":"rf_classifier(x, colind, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rf_classifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"construct a random forest wrapper classifier — rf_classifier","text":"x model object colind (optional) column indices used prediction ... extra arguments randomForest function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rf_classifier.projector.html","id":null,"dir":"Reference","previous_headings":"","what":"create a random forest classifier — rf_classifier.projector","title":"create a random forest classifier — rf_classifier.projector","text":"create random forest classifier","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rf_classifier.projector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a random forest classifier — rf_classifier.projector","text":"","code":"# S3 method for projector rf_classifier(x, labels, scores, colind = NULL, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rf_classifier.projector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create a random forest classifier — rf_classifier.projector","text":"","code":"data(iris) X <- iris[,1:4] pcres <- pca(as.matrix(X),2) cfier <- rf_classifier(pcres, labels=iris[,5], scores=scores(pcres)) #> Error in classifier.projector(pcres, labels = iris[, 5], scores = scores(pcres)): argument \"new_data\" is missing, with no default p <- predict(cfier, as.matrix(iris[,1:4])) #> Error in eval(expr, envir, enclos): object 'cfier' not found"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate a Component Solution — rotate","title":"Rotate a Component Solution — rotate","text":"Perform rotation component loadings improve interpretability.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate a Component Solution — rotate","text":"","code":"rotate(x, ncomp, type)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate a Component Solution — rotate","text":"x model fit, typically result dimensionality reduction method like PCA. ncomp number components rotate. type type rotation apply (e.g., \"varimax\", \"quartimax\", \"promax\").","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate a Component Solution — rotate","text":"modified model fit rotated components.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the component scores — scores","title":"Retrieve the component scores — scores","text":"Extract factor score matrix fitted model. factor scores represent projections data onto components, can used analysis visualization.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the component scores — scores","text":"","code":"scores(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the component scores — scores","text":"x model fit object. ... Additional arguments passed method.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the component scores — scores","text":"matrix factor scores, rows corresponding samples columns components.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/sdev.html","id":null,"dir":"Reference","previous_headings":"","what":"standard deviations — sdev","title":"standard deviations — sdev","text":"standard deviations projected data matrix","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/sdev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standard deviations — sdev","text":"","code":"sdev(x)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/sdev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"standard deviations — sdev","text":"x model fit","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape of the Projector — shape","title":"Shape of the Projector — shape","text":"Get input/output shape projector.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape of the Projector — shape","text":"","code":"shape(x, ...)  # S3 method for cross_projector shape(x, source = c(\"X\", \"Y\"), ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape of the Projector — shape","text":"x model fit. ... Extra arguments. source source data (X Y block)","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shape of the Projector — shape","text":"vector containing dimensions sample loadings matrix v (number rows columns).","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shape of the Projector — shape","text":"function retrieves dimensions sample loadings matrix v form vector two elements. first element number rows v matrix, second element number columns.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"center and scale each vector of a matrix — standardize","title":"center and scale each vector of a matrix — standardize","text":"center scale vector matrix","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"center and scale each vector of a matrix — standardize","text":"","code":"standardize(preproc = prepper(), cmeans = NULL, sds = NULL)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"center and scale each vector of a matrix — standardize","text":"preproc pre-processing pipeline cmeans optional vector column means sds optional vector sds","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/std_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standardized component scores — std_scores","title":"Compute standardized component scores — std_scores","text":"Calculate standardized factor scores fitted model. Standardized scores useful comparing contributions different components scale, can help interpreting results.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/std_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standardized component scores — std_scores","text":"","code":"std_scores(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/std_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standardized component scores — std_scores","text":"x model fit object. ... Additional arguments passed method.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/std_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standardized component scores — std_scores","text":"matrix standardized factor scores, rows corresponding samples columns components.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/svd_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Singular Value Decomposition (SVD) Wrapper — svd_wrapper","title":"Singular Value Decomposition (SVD) Wrapper — svd_wrapper","text":"Computes singular value decomposition matrix using one specified methods. designed easy--use wrapper various SVD methods available R.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/svd_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Singular Value Decomposition (SVD) Wrapper — svd_wrapper","text":"","code":"svd_wrapper(   X,   ncomp = min(dim(X)),   preproc = pass(),   method = c(\"fast\", \"base\", \"irlba\", \"propack\", \"rsvd\", \"svds\"),   q = 2,   p = 10,   tol = .Machine$double.eps,   ... )"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/svd_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Singular Value Decomposition (SVD) Wrapper — svd_wrapper","text":"X input matrix ncomp number components estimate (default: min(dim(X))) preproc pre-processor apply input matrix (e.g., center(), standardize(), pass()) method SVD method use: 'base', 'fast', 'irlba', 'propack', 'rsvd', 'svds' q parameter passed method rsvd (default: 2) p parameter passed method rsvd (default: 10) tol minimum eigenvalue magnitude, otherwise component dropped (default: .Machine$double.eps) ... extra arguments passed selected SVD function","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/svd_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Singular Value Decomposition (SVD) Wrapper — svd_wrapper","text":"SVD object extends projector","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/svd_wrapper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Singular Value Decomposition (SVD) Wrapper — svd_wrapper","text":"","code":"# Load iris dataset and select the first four columns data(iris) X <- iris[, 1:4]  # Compute SVD using the base method and 3 components fit <- svd_wrapper(X, ncomp = 3, preproc = center(), method = \"base\")"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/transpose.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose a model — transpose","title":"Transpose a model — transpose","text":"function transposes model switching coefficients scores. useful want reverse roles samples variables model, especially context dimensionality reduction methods.","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/transpose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose a model — transpose","text":"","code":"transpose(x, ...)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/transpose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose a model — transpose","text":"x model fit, typically object class implements transpose method ... Additional arguments passed underlying transpose method","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/transpose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose a model — transpose","text":"transposed model coefficients scores switched","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/multivarious/reference/truncate.html","id":null,"dir":"Reference","previous_headings":"","what":"truncate a component fit — truncate","title":"truncate a component fit — truncate","text":"take first n components decomposition","code":""},{"path":"https://bbuchsbaum.github.io/multivarious/reference/truncate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"truncate a component fit — truncate","text":"","code":"truncate(x, ncomp)"},{"path":"https://bbuchsbaum.github.io/multivarious/reference/truncate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"truncate a component fit — truncate","text":"x object truncate ncomp number components retain","code":""}]
